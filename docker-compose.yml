version: "3.4"

services:

  postgis:
    image: kartoza/postgis:12.4
    env_file:
      - .env
    networks:
      - database_network
    volumes:
      - postgis_volume:/var/lib/postgresql
    healthcheck:
      test: ["CMD", "pg_isready"]
    labels:
      - "lt.getpet.postgres"
    deploy:
      restart_policy:
        condition: on-failure

  dbbackup:
    image: kartoza/pg-backup:12.1
    volumes:
      - /srv/getpet-web-db-backups:/backups
    networks:
      - database_network
    env_file:
      - .env
    environment:
      - DUMPPREFIX=getpet_web

  redis:
    image: redis:6.2
    networks:
      - redis_network
    volumes:
      - redis_volume:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  platform:
    image: vycius/getpet-platform:latest
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ || exit 1"]
    labels:
      - "lt.getpet.platform"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        delay: 5s
        order: stop-first
    volumes:
      - static_volume:/srv/platform/static
      - media_volume:/srv/platform/media
      - /root/getpet-web/keyfiles:/srv/platform/keyfiles/
    networks:
      - nginx_network
      - database_network
      - redis_network
      - datadog_network
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:1.21
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/srv/platform/static
      - media_volume:/srv/platform/media
    depends_on:
      - platform
    networks:
      - nginx_network
    labels:
      - "lt.getpet.nginx"
    deploy:
      restart_policy:
        condition: on-failure

  celery_beat:
    image: vycius/getpet-platform:latest
    env_file:
      - .env
    volumes:
      - static_volume:/srv/platform/static
      - media_volume:/srv/platform/media
      - /root/getpet-web/keyfiles:/srv/platform/keyfiles/
    command: ddtrace-run celery -A getpet beat -l info --schedule=/srv/platform/celerybeat-schedule
    networks:
      - database_network
      - redis_network
      - datadog_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  celery_default_worker:
    image: vycius/getpet-platform:latest
    env_file:
      - .env
    volumes:
      - static_volume:/srv/platform/static
      - media_volume:/srv/platform/media
      - /root/getpet-web/keyfiles:/srv/platform/keyfiles/
    command: ddtrace-run celery -A getpet worker -l info -E --concurrency=3
    networks:
      - database_network
      - redis_network
      - datadog_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  ddagent:
    image: datadog/agent:7
    environment:
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    networks:
      - datadog_network

networks:
  nginx_network:
    driver: overlay
  database_network:
    driver: overlay
  redis_network:
    driver: overlay
  datadog_network:
    driver: overlay

volumes:
  postgres_volume:
  postgis_volume:
  static_volume:
  media_volume:
  redis_volume:
