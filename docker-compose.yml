version: "3.4"

services:

  postgres:
    image: postgres:11.1
    env_file:
    - .env
    networks:
    - database_network
    volumes:
    - database_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  redis:
    image: redis:5.0.0
    networks:
    - redis_network
    volumes:
    - redis_volume:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  platform:
    image: vycius/getpet-platform
    env_file:
    - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ || exit 1"]
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        delay: 5s
        order: stop-first
    volumes:
    - static_volume:/srv/platform/static
    - media_volume:/srv/platform/media
    - /root/getpet-web/keyfiles:/srv/platform/keyfiles/
    networks:
    - nginx_network
    - database_network
    - redis_network
    depends_on:
    - postgres
    - redis

  nginx:
    image: nginx:1.15
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./config/nginx/conf.d:/etc/nginx/conf.d
    - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
    - static_volume:/srv/platform/static
    - media_volume:/srv/platform/media
    depends_on:
    - platform
    networks:
    - nginx_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  nginx_network:
    driver: overlay
  database_network:
    driver: overlay
  redis_network:
    driver: overlay

volumes:
  database_volume:
  static_volume:
  media_volume:
  redis_volume:
